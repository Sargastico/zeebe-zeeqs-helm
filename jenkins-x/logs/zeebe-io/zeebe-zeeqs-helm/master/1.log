
Showing logs for build [32mzeebe-io-zeebe-zeeqs-helm-maste-lp87x-1[0m stage [32mfrom-build-pack[0m and container [32mstep-credential-initializer-2qs5c[0m
{"level":"info","ts":1592229496.6153264,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1592229496.6206245,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mzeebe-io-zeebe-zeeqs-helm-maste-lp87x-1[0m stage [32mfrom-build-pack[0m and container [32mstep-working-dir-initializer-dnm8c[0m
{"level":"info","ts":1592229497.5418491,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1592229497.5437815,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully executed command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mzeebe-io-zeebe-zeeqs-helm-maste-lp87x-1[0m stage [32mfrom-build-pack[0m and container [32mstep-place-tools[0m

Showing logs for build [32mzeebe-io-zeebe-zeeqs-helm-maste-lp87x-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-source-zeebe-io-zeebe-zeeqs-helm-maste-lp87x-n2rtl[0m
{"level":"info","ts":1592229501.7009652,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1592229502.8954375,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/zeebe-io/zeebe-zeeqs-helm.git @ v0.0.3 in path /workspace/source"}

Showing logs for build [32mzeebe-io-zeebe-zeeqs-helm-maste-lp87x-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:
WARNING: no SHAs to merge, falling back to initial cloned commit

Showing logs for build [32mzeebe-io-zeebe-zeeqs-helm-maste-lp87x-1[0m stage [32mfrom-build-pack[0m and container [32mstep-setup-jx-git-credentials[0m
Generated Git credentials file /builder/home/git/credentials

Showing logs for build [32mzeebe-io-zeebe-zeeqs-helm-maste-lp87x-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-basic-auth-username[0m
/builder/home/basic-auth-user.json

Showing logs for build [32mzeebe-io-zeebe-zeeqs-helm-maste-lp87x-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-basic-auth-password[0m
/builder/home/basic-auth-pass.json

Showing logs for build [32mzeebe-io-zeebe-zeeqs-helm-maste-lp87x-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-release[0m
rm -rf zeeqs/charts
rm -rf zeeqs/zeeqs*.tgz
rm -rf zeeqs/requirements.lock
helm init --client-only
Creating /builder/home/.helm 
Creating /builder/home/.helm/repository 
Creating /builder/home/.helm/repository/cache 
Creating /builder/home/.helm/repository/local 
Creating /builder/home/.helm/plugins 
Creating /builder/home/.helm/starters 
Creating /builder/home/.helm/cache/archive 
Creating /builder/home/.helm/repository/repositories.yaml 
Adding stable repo with URL: https://kubernetes-charts.storage.googleapis.com 
Adding local repo with URL: http://127.0.0.1:8879/charts 
$HELM_HOME has been configured at /builder/home/.helm.
Not installing Tiller due to 'client-only' flag having been set
Happy Helming!
helm repo add jenkins-x http://chartmuseum.jenkins-x.io
"jenkins-x" has been added to your repositories
#helm repo add releases http://jenkins-x-chartmuseum:8080
helm dependency build zeeqs
Hang tight while we grab the latest from your chart repositories...
...Unable to get an update from the "local" chart repository (http://127.0.0.1:8879/charts):
	Get http://127.0.0.1:8879/charts/index.yaml: dial tcp 127.0.0.1:8879: connect: connection refused
...Successfully got an update from the "stable" chart repository
...Successfully got an update from the "jenkins-x" chart repository
Update Complete. âŽˆHappy Helming!âŽˆ
Saving 1 charts
Downloading hazelcast from repo https://kubernetes-charts.storage.googleapis.com/
Deleting outdated charts
helm lint zeeqs
==> Linting zeeqs
Lint OK

1 chart(s) linted, no failures
sed -i -e "s/version:.*/version: 0.0.3/" zeeqs/Chart.yaml
helm package zeeqs
Successfully packaged chart and saved it to: /workspace/source/zeeqs-0.0.3.tgz
curl --fail -u *****:*********** --data-binary "@zeeqs-0.0.3.tgz" http://jenkins-x-chartmuseum:8080/api/charts
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
{"saved":true}rm -rf zeeqs*.tgz
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 13868  100    14  100 13854   1157  1118k --:--:-- --:--:-- --:--:-- 1229k
** step changelog  --verbose --version 0.0.3 --rev 
Error: flag needs an argument: --rev


Aliases:
changelog, changes
Examples:
  # generate a changelog on the current source
  ** step changelog
  
  # specify the version to use
  ** step changelog --version 1.2.3
  
  # specify the version and a header template
  ** step changelog --header-file docs/dev/changelog-header.md --version 1.2.3
Options:
      --build='': The Build number which is used to update the PipelineActivity. If not specified its defaulted from  the '$BUILD_NUMBER' environment variable
  -c, --crd=false: Generate the CRD in the chart
      --crd-yaml-file='release-crd.yaml': the name of the file to generate the Release CustomResourceDefinition YAML
      --dir='': The directory of the Git repository. Defaults to the current working directory
      --fail-if-no-commits=false: Do we want to fail the build if we don't find any commits to generate the changelog
      --footer='': The changelog footer in markdown for the changelog. Can use go template expressions on the ReleaseSpec object: https://golang.org/pkg/text/template/
      --footer-file='': The file name of the changelog footer in markdown for the changelog. Can use go template expressions on the ReleaseSpec object: https://golang.org/pkg/text/template/
  -y, --generate-yaml=true: Generate the Release YAML in the local helm chart
      --header='': The changelog header in markdown for the changelog. Can use go template expressions on the ReleaseSpec object: https://golang.org/pkg/text/template/
      --header-file='': The file name of the changelog header in markdown for the changelog. Can use go template expressions on the ReleaseSpec object: https://golang.org/pkg/text/template/
      --include-merge-commits=false: Include merge commits when generating the changelog
      --no-dev-release=false: Disables the generation of Release CRDs in the development namespace to track releases being performed
      --output-markdown='': The file to generate for the changelog output if not updating a Git provider release
  -o, --overwrite=false: overwrites the Release CRD YAML file if it exists
      --previous-date='': the previous date to find a revision in format 'MonthName dayNumber year'
  -p, --previous-rev='': the previous tag revision
      --release-yaml-file='release.yaml': the name of the file to generate the Release YAML
  -r, --rev='': the current tag revision
  -t, --templates-dir='': the directory containing the helm chart templates to generate the resources
      --update-release=true: Should we update the release on the Git repository with the changelog
  -v, --version='': The version to release
Usage:
  ** step changelog [flags] [options]
Use "** options" for a list of global command-line options (applies to all commands).

make: *** [release] Error 1
[31m
Pipeline failed on stage 'from-build-pack' : container 'step-build-release'. The execution of the pipeline has stopped.[0m
